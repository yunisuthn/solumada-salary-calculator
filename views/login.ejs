<!DOCTYPE html>
<html lang="en">

<head>
  <!-- Required meta tags -->
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
  <title>Login</title>
  <!-- plugins:css -->
  <link rel="stylesheet" href="/vendors/ti-icons/css/themify-icons.css">
  <link rel="stylesheet" href="/vendors/base/vendor.bundle.base.css">
  <!-- endinject -->
  <!-- plugin css for this page -->
  <!-- End plugin css for this page -->
  <!-- inject:css -->
  <link rel="stylesheet" href="/css/style.css">
  <!-- endinject -->
  <link rel="shortcut icon" href="/images/optumin-solution-logo.png" />
</head>

<body>
  <div class="container-scroller">
    <div class="container-fluid page-body-wrapper full-page-wrapper">
      <div class="content-wrapper d-flex align-items-stretch auth auth-img-bg">
        <div class="row flex-grow bg-white">
          <div class="col-lg-6 d-flex align-items-center justify-content-center">
            <div class="auth-form-transparent text-left p-3">
              <div class="brand-logo">
                <img src="/images/optumin-solution.png" alt="logo">
                <!-- <img src="/images/Logo-Solumada-01.jpg" alt="logo"> -->
              </div>
              <h4>Welcome to Salary Calculation</h4>
              <h6 class="font-weight-light">Happy to see you again!</h6>
              <form class="pt-3" method="post" action="/login">
                <div class="form-group">
                  <label for="exampleInputEmail">Username</label>
                  <div class="input-group">
                    <div class="input-group-prepend bg-transparent">
                      <span class="input-group-text bg-transparent border-right-0">
                        <i class="ti-user text-primary"></i>
                      </span>
                    </div>
                    <input type="text" class="form-control form-control-lg border-left-0" name="username" id="username" placeholder="Username">
                  </div>
                </div>
                <div class="form-group">
                  <label for="exampleInputPassword">Password</label>
                  <div class="input-group">
                    <div class="input-group-prepend bg-transparent">
                      <span class="input-group-text bg-transparent border-right-0">
                        <i class="ti-lock text-primary"></i>
                      </span>
                    </div>
                    <input type="password" class="form-control form-control-lg border-left-0" name="password" id="password" placeholder="Password">                        
                  </div>
                </div>
                <div class="my-2 d-flex justify-content-between align-items-center">
                  <div class="form-check">
                    <!-- <label class="form-check-label text-muted">
                      <input type="checkbox" class="form-check-input">
                      Keep me signed in
                    </label> -->
                  </div>
                  <a href="/forgot-password" class="auth-link text-black">Forgot password?</a>
                </div>
                <div class="my-3">
                  <button type="submit" id="submit" class="btn btn-block btn-primary btn-lg font-weight-medium auth-form-btn text-white">LOGIN</button>
                  <img src="/images/loading-gif-15.gif" alt="loading..." draggable="false" id="loading-gif" style="width: 110px;opacity: 0;">
                </div>
              </form>
            </div>
          </div>
          <div class="col-lg-6 login-half-bg d-flex flex-row">
            <p class="text-white font-weight-medium text-center flex-grow align-self-end">Copyright Â© <%= year %>  by Solumada developer</p>
          </div>
        </div>
      </div>
      <!-- content-wrapper ends -->
    </div>
    <!-- page-body-wrapper ends -->
  </div>
  <!-- container-scroller -->
  <!-- plugins:js -->
  <script src="/vendors/base/vendor.bundle.base.js"></script>
  <!-- endinject -->
  <!-- inject:js -->
  <script src="/js/off-canvas.js"></script> 
  <script src="/js/hoverable-collapse.js"></script>
  <script src="/js/template.js"></script>
  <script src="/js/todolist.js"></script>
  <script src="/js/sweetalert.min.js"></script>
  <script src="../node_modules/socket.io/client-dist/socket.io.js"></script>
  <script>
      var socket = io();
      socket.on('connection');

  </script>
  <!-- endinject -->
  <script>
    let submitBtn = document.getElementById('submit');
    let loadingGif = document.getElementById('loading-gif');

    let separator = '-||-';
    document.forms[0].addEventListener('submit', (e) => {

      let username = document.getElementById('username');
      let password = document.getElementById('password');

      let validation = true;

      // username
      if (username.value.trim().length < 3) {
          username.classList.remove('is-valid');
          username.classList.add('is-invalid');
          addSmall(username, 'Enter a valid username.' ,'text-danger');
          validation = false;
      } else {
          username.classList.remove('is-invalid');
          username.classList.add('is-valid');
          addSmall(username, '' ,'text-success');
      }

      // password 
      if (password.value.length < 6) {
          password.classList.remove('is-valid');
          password.classList.add('is-invalid');
          addSmall(password, 'The password must be at least 6 characters.' ,'text-danger')
          validation = false;
      } else {
          password.classList.remove('is-invalid');
          password.classList.add('is-valid');
          addSmall(password, '' ,'text-success');
      }

      e.preventDefault();
      
      if (validation) {
          // loading...
          submitBtn.disabled = true;
          loadingGif.style.opacity = '1';

          var http = new XMLHttpRequest();
          http.open("POST", e.target.action, true);
          http.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
          http.onreadystatechange = function() {
              if (this.readyState == 4 && this.status == 200) {
                  let response = JSON.parse(this.response);
                  if (response.status) {
                    // setCookie('csc='+response.username+separator+response.password, 760);
                    window.location = '/';
                  } else {
                      if (response.data) {
                          response.data.forEach(resp => {
                              if (resp.target === 'username') {
                                  username.classList.add('is-invalid');
                                  addSmall(username, resp.message, 'text-danger');
                              }
                              if (resp.target === 'password') {
                                  password.classList.add('is-invalid');
                                  addSmall(password, resp.message, 'text-danger');
                              }
                              if (resp.target === 'access') {
                                swal({
                                  title: 'Warning',
                                  text: resp.message,
                                  icon: 'warning',
                                });
                              }
                          });
                      } else {
                          if (response.target === 'database') {
                              swal({
                                  title: 'Error',
                                  text: response.message,
                                  icon: 'error',
                              });
                          }
                      }
                  }
                  
                  submitBtn.disabled = false;
                  loadingGif.style.opacity = '0';
              }
          };
          http.send(`username=${username.value}&password=${password.value}`);
      }
    });

    const addSmall = (input, text, className) => {
      if (input.parentElement.nextElementSibling) input.parentElement.nextElementSibling.remove();
      let small = document.createElement('small');
      small.textContent = text;
      small.className = className + ' mt-1';
      input.parentElement.after(small);
    }

    /**
     *  COOKIES 
     */

    function setCookie(cdata, exdays) {
      const d = new Date();
      d.setTime(d.getTime() + (exdays*24*60*60*1000));
      let expires = "expires="+ d.toUTCString();
      document.cookie = cdata + ";"+ expires + ";path=/";
    }

    function getCookie(cname) {
      let name = cname + "=";
      let decodedCookie = decodeURIComponent(document.cookie);
      let ca = decodedCookie.split(';');
      for(let i = 0; i <ca.length; i++) {
        let c = ca[i];
        while (c.charAt(0) == ' ') {
          c = c.substring(1);
        }
        if (c.indexOf(name) == 0) {
          return c.substring(name.length, c.length);
        }
      }
      return "";
    }

    // set session from navigator
    const hasCookies = (username, password) => {
      var http = new XMLHttpRequest();
      http.open("POST", '/login', true);
      http.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
      http.onreadystatechange = function() {
        if (this.readyState == 4 && this.status == 200) {
          if (this.response.status) {
            window.location = '/home';
          }
        }
      }
      http.send('username='+username+'&'+'password='+password);
    } 

    
    // let username = getCookie('csc').split(separator)[0];
    // let password = getCookie('csc').split(separator)[1];
    // if (username !== '' && password !== '') {
    //   hasCookies(username, password);
    // }
  </script>
</body>

</html>
